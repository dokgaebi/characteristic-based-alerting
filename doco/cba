Characteristic Based Alerting
Premise:
The security has conducted great efforts to reduce the alert fatigue experienced by the majority of security eams

Alert fatigue often results from 2 causes:
Insufficiently tuned alerts/notables
Alerts need to be tuned/created such that the ratio of positives to false-positives is extremely low
Tuning needs to be conducted continuously and vigorously to ensure alerts are as refined and current as possible
Inability to tune alerts/notables due to network design/use limitations
Networks that are inherently insecure or where policies are lax or not enforced will cause even perfectly tuned alerts to have a high false positive rate
Security operating in isolation will ot overcome this shortfall, SecOps working together with enterprise architecture will need to investigate and alleviate the experienced issues. 
These solutions are extremely difficult to achieve for the majority of enterprises, as such strategies have been developed to sort the wheat from the chaff.  Strategies such as risk based alerting can greatly assist in sorting through the chaff but the addition of an abstraction layer can cause particularly subtle attacks to go unnoticed.  

Alerts often focus on specific signature traits used in the attack to detect the action.  To avoid detection attackers will monitor threat intelligence to determine the discovered signatures and slightly alter these to avoid future detection.  

Detection of attacker techniques by focusing on the characteristics of the technique, where this is not normal behaviour for the device will provide more sensitive alerting that is not susceptible to minor signature changes.

Techniques need to be dissected to determine what noise (above normal operations) will be made and in what log entry these can be found.

Sensitivity tuning can be achieved by employing a requirement for more than one characteristic for an attack technique to be present.

For Example: Web Shell detection

Characteristics:
C2 and/or Exfil through URI encoding.  
Unusually long URI for that server URL
Baseline each server URL for normal length using normal distribution and 90 percentile.  Alert for URI that exceeds 2 stdDev above norm or 90%.
Connections to webshells are usually not referred from other pages
Unusually low referrer count for a server
Baseline each server across all ULSs for referrer count using normal distribution and 90 percentile.  Alert for URI that exceeds 2 stdDev above norm or 90%
Webshell clients may use uncommon, mistyped or outdated user agents
Unusually low UA count for a server
Baseline each server across all servers for UA count per server using normal distribution and 90 percentile.  Alert for URI that exceeds 2 stdDev above norm or 90%
Webshells often use a separate URL from other servers
New URL created on a server where this behaviour is unusual
Baseline URL age across the server, do not activate on servers that have a URL average lifespan of less than 2 days.   Alert for URLs detected with an age of 1 day.
Webshel C2 and/or exfil will produce increased session volume
Detecting a session that has as higher session byte count than is normal for that server
Baseline per server session volumes.  Alert for URI that exceeds 2 stdDev above norm or 90%
Webshells are usually not connected to as often as other HTTP endpoints on a server.



